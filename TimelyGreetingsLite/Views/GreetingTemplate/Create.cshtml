@model TimelyGreetingsLite.Models.GreetingTemplate

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GreetingTemplate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GreetingTemplateName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.GreetingTemplateName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GreetingTemplateName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OccassionTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.DropDownList("OccassionTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OccassionTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverBackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverBackgroundColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverBackgroundColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverBackgroundPatternFilePathName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverBackgroundPatternFilePathName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverBackgroundPatternFilePathName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverImageFilePathName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverImageFilePathName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverImageFilePathName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideBackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideBackgroundColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideBackgroundColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideBackgroundPatternFilePathName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideBackgroundPatternFilePathName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideBackgroundPatternFilePathName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideImageFilePathName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideImageFilePathName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideImageFilePathName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverFont, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverFont, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverFont, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverFontSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverFontSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverFontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverFontColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverFontColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverFontColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FrontCoverFontWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.FrontCoverFontWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FrontCoverFontWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideFont, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideFont, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideFont, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideFontSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideFontSize, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideFontSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideFontColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideFontColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideFontColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsideFontWeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.InsideFontWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsideFontWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MusicPathFileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-12">
                @Html.EditorFor(model => model.MusicPathFileName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MusicPathFileName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
